<!DOCTYPE html>
<html>
	<head>
		<title>Live Stream</title>
		<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.2.0/socket.io.js"></script>
		<script src="https://cdnjs.cloudflare.com/ajax/libs/simple-peer/9.4.0/simplepeer.min.js"></script>
		<script src="base64.js"></script>
	</head>
	<body>

		<div>Online Users : <b id="isOnline"></b>     ====================  Your Room : <b id="yourRoom"></b></div>
		<br>
		<button onclick="createRoom()">Create Room</button>
		<br><br>
		<table id="listRooms" border="1" style="text-align: center;">
			<tr>
				<td width="200px" height="30px">Room ID</td>
				<td width="70px" height="30px">Action</td>
			</tr>
			<% for (var i = 0; i < listRooms.length; i++) { %>
				<tr>
					<td width="200px" height="30px"> <%= listRooms[i].id %> </td>
					<td width="70px" height="30px"><button onclick="joinRoom(this,'<%= listRooms[i].id %>','<%= listRooms[i].creator %>','<%= listRooms[i].signal %>')">Join</button></td>
				</tr>
			<% } %>
		</table>
		<br>
		<video id="streamVideo" width="500px" height="auto"></video>

		<script type="text/javascript">
			var socket = io("http://localhost:3000");
			var room = null;
			var globalStream = null;
			var globalPeer = null;

			var config = {
				initiator: false,
				config: {
					iceServers: [
						{ url: 'stun:stun01.sipphone.com' },
						{ url: 'stun:stun.ekiga.net' },
						{ url: 'stun:stun.fwdnet.net' },
						{ url: 'stun:stun.ideasip.com' },
						{ url: 'stun:stun.iptel.org' },
						{ url: 'stun:stun.rixtelecom.se' },
						{ url: 'stun:stun.schlund.de' },
						{ url: 'stun:stun.l.google.com:19302' },
						{ url: 'stun:stun1.l.google.com:19302' },
						{ url: 'stun:stun2.l.google.com:19302' },
						{ url: 'stun:stun3.l.google.com:19302' },
						{ url: 'stun:stun4.l.google.com:19302' },
						{ url: 'stun:stunserver.org' },
						{ url: 'stun:stun.softjoys.com' },
						{ url: 'stun:stun.voiparound.com' },
						{ url: 'stun:stun.voipbuster.com' },
						{ url: 'stun:stun.voipstunt.com' },
						{ url: 'stun:stun.voxgratia.org' },
						{ url: 'stun:stun.xten.com' },
						{
							url: 'turn:numb.viagenie.ca',
							credential: 'muazkh',
							username: 'webrtc@live.com'
						},
						{
							url: 'turn:192.158.29.39:3478?transport=udp',
							credential: 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',
							username: '28224511:1379330808'
						},
						{
							url: 'turn:192.158.29.39:3478?transport=tcp',
							credential: 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',
							username: '28224511:1379330808'
						}
					]
				},
				trickle: false
			};

			socket.on('client-counts',function(data){
				document.getElementById('isOnline').innerHTML = data.count;
			});

			function openLocalStreamVideo(){
				navigator.mediaDevices.getDisplayMedia({
				    video: true,
				    audio : false
				}).then(function(stream){
					console.log(stream);
					config.stream = stream;
					console.log(stream);
					var video = document.getElementById('streamVideo');
					video.srcObject = stream;
					globalStream = stream;
					video.onloadedmetadata = function(){
						video.play();
					}
				}).catch(function(err){
					console.log(err);
				});
			}

			function createRoom(){
				var roomId = prompt('Input your room ID you want create !');
				document.getElementById('yourRoom').innerHTML = roomId;
				room = roomId;
				var html = document.createElement("tr");
				html.innerHTML = `
					<td width="200px" height="30px">${roomId}</td>
					<td><button disabled>Joined</button></td>
				`;
				document.getElementById('listRooms').appendChild(html);
				openLocalStreamVideo();
				config.initiator = true;
				//config.stream = globalStream;
				globalPeer = new SimplePeer(config);
				console.log('Mess : you are creating the offer...');
				globalPeer.on('signal', function (data) {
					socket.emit('live-stream',{
						id : socket.id,
						type : 'create-room',
						roomId : roomId,
						signal : data
					});
					console.log(data);
				});
				console.log('Mess : you created the offer !');
			}

			function joinRoom(elem,roomId,creator,signal){
				signal = JSON.parse(Base64.decode(signal));
				console.log(signal);
				document.getElementById('yourRoom').innerHTML = roomId;
				room = roomId;
				elem.innerHTML = 'Joined';
				elem.disabled = true;
				var peer = new SimplePeer(config);
				console.log(config);
				console.log('Mess : you are signaling the offer !');
				peer.signal(signal);
				console.log('Mess : you signaled the offer !');
				console.log('Mess : you are creating the answer !');
				peer.on('signal',function(data){
					console.log('Mess : you created the answer !');
					socket.emit('live-stream',{
						id : socket.id,
						type : 'confirm',
						roomId : roomId,
						creator : creator,
						signal : data
					});
					console.log('Mess : you sent the answer to the Room !');
				});
				console.log('Mess : you are getting stream ...');
				console.log(peer);
				peer.on('stream', function (stream) {
					console.log('Mess : you getted stream !');
					console.log(stream);
					var video = document.getElementById('streamVideo');
					video.srcObject = stream;
					video.onloadedmetadata = function(){
						video.play();
					}
				});
			}

			socket.on('live-stream',function(data){
				if(data.id != socket.id){

					if(data.type == 'create-room'){
						var html = document.createElement("tr");
						var signalJson = Base64.encode(JSON.stringify(data.signal));
						html.innerHTML = `
							<td width="200px" height="30px">${data.roomId}</td>
							<td width="70px" height="30px"><button onclick="joinRoom(this,'${data.roomId}','${data.id}','${signalJson}')">Join</button></td>
						`;
						document.getElementById('listRooms').appendChild(html);
					}

					if(data.type == 'confirm' && data.roomId == room && data.creator == socket.id){
						console.log(data);
						console.log('Mess : you are signaling the answer ...');
						globalPeer.signal(data.signal);
						console.log('Mess : you signaled the answer !');
					}

				}
			});

		</script>
	</body>
</html>